//
// Función que pone a nivel alto un pin de entrada de un puerto
//
func void SetPin (int puerto, int pin)
{
switch(puerto) {
case 0:
PORT0|=(1<<pin); // Pone P0.pin a 1
break;
case 1:
PORT1|=(1<<pin); // Pone P1.pin a 1
break;
case 2:
PORT2|=(1<<pin); // Pone P2.pin a 1
break;
}
}
//
// Función que pone a nivel bajo un pin de entrada de un puerto
//
func void ClrPin (int puerto, int pin)
{
switch(puerto) {
case 0:
PORT0&=~(1<<pin); // Pone P0.pin a 0
break;
case 1:
PORT1&=~(1<<pin); // Pone P1.pin a 0
break;
case 2:
PORT2&=~(1<<pin); // Pone P2.pin a 0
break;
}
}
//
// Señal periódica de frecuencia "frecuencia" y ciclo de trabajo "ciclo" que se introduce
// por el pin "pin" del puerto "puerto"
//
signal void periodica_1 (int puerto, int pin, float frecuencia, float ciclo)
{
while(1){
SetPin(puerto, pin); // Pone Puerto.pin a 1
swatch(ciclo*(1/frecuencia)); // Espera ciclo*T segundos
ClrPin(puerto, pin); // Pone Puerto.pin a 0
swatch((1-ciclo)*(1/frecuencia)); // Espera (1-ciclo)*T segundos
}
}
//
// Señal periódica de frecuencia "frecuencia" y ciclo de trabajo "ciclo" que se introduce
// por el pin "pin" del puerto "puerto"
//
signal void periodica_2 (int puerto, int pin, float frecuencia, float ciclo)
{
while(1){
SetPin(puerto, pin); // Pone Puerto.pin a 1
swatch(ciclo*(1/frecuencia)); // Espera ciclo*T segundos
ClrPin(puerto, pin); // Pone Puerto.pin a 0
swatch((1-ciclo)*(1/frecuencia)); // Espera (1-ciclo)*T segundos
}
}